@import "../../../../styles/abstracts/mixins";

.navbar {
  &--sticky {
    position: sticky;
    top: -0.1rem;
    width: 100%;
    background-color: var(--navbar-sticky-color);
    padding-bottom: 1rem;
    backdrop-filter: blur(10px);
    z-index: 4;

    @supports not (backdrop-filter: blur(10px)) {
      filter: blur(10px);
    }
  }

  &__logo {
    font-size: 2.4rem;
    transition: color 0.3s ease-in;

    @include break(small) {
      z-index: 10;
    }

    &,
    &:link,
    &:visited {
      text-decoration: none;
      text-transform: uppercase;
      color: var(--foreground);
    }
    /*
      We're changing navbar color based on screen size and if navbar is shown or not 
      navbar.component.html:6-10
    */
    &--index {
      // When on index page, we have rectangles on which white text looks better

      // On Index page, medium size and navbar isn't shown, set to light color
      @include break(medium) {
        @media (prefers-color-scheme: light) {
          color: var(--background) !important;
        }
      }
      // On Index page, small size, navbar isn't shown, set to light color
      @include break(small) {
        @media (prefers-color-scheme: light) {
          color: var(--foreground) !important;
        }
      }
    }
    // When on index page and navbar is shown
    &--index-opened-small {
      // On index page, medium size and navbar is shown, set to light color
      @include break(medium) {
        @media (prefers-color-scheme: light) {
          color: var(--background) !important;
        }
      }
      // On Index page, small size and navbar is shown, set to light color
      @include break(small) {
        @media (prefers-color-scheme: light) {
          color: var(--background) !important;
        }
      }
    }
    // Not on index page and navbar is shown
    &--not-index-opened-small {
      @include break(small) {
        @media (prefers-color-scheme: light) {
          color: var(--background) !important;
        }
      }
    }
  }

  &__list {
    @include break(medium) {
      position: fixed;
      height: 100vh;
      top: 0;
      right: -150%;
      width: 40%;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      background: var(--gradient-darker);
      transition: right 0.7s cubic-bezier(1, 0, 0, 1);
      z-index: 4;
    }
    @include break(small) {
      width: 100%;
    }
    list-style: none;

    &--active {
      right: 0;
    }
  }

  &__list-item:not(:last-child) {
    @include break(medium) {
      margin-right: 0;
      margin-bottom: 1rem;
    }
    margin-right: 7rem;
  }

  &__link {
    &,
    &:link,
    &:visited {
      text-decoration: none;
      font-size: 2.2rem;
      text-transform: uppercase;
      color: var(--foreground);

      @include break(medium) {
        @media (prefers-color-scheme: light) {
          color: var(--background);
        }
      }
    }
    &--inverted {
      @media only screen and (min-width: 992px) {
        @media (prefers-color-scheme: light) {
          color: var(--background) !important;
        }
      }
    }
  }
  &__toggler {
    @include break(medium) {
      display: block;
    }
    display: none;
    background-color: var(--foreground);
    width: 3rem;
    height: 0.4rem;
    position: relative;
    z-index: 10;
    transition: background-color 0.7s cubic-bezier(1, 0, 0, 1);

    &:hover {
      cursor: pointer;
    }

    &::before {
      content: "";
      top: -0.8rem;
      left: 0;
      position: absolute;
      width: 3rem;
      height: 0.4rem;
      background-color: inherit;
      visibility: visible;
      transition: transform ease-in 0.3s;
    }
    &::after {
      content: "";
      top: 0.8rem;
      left: 0;
      position: absolute;
      width: 3rem;
      height: 0.4rem;
      background-color: inherit;
      visibility: visible;
      transition: transform ease-in 0.3s;
    }

    &--opened {
      &::before {
        transform: translateX(-0.8rem);
      }
      &::after {
        transform: translateX(0.8rem);
      }
      @include break(medium) {
        @media (prefers-color-scheme: light) {
          background-color: var(--background);
        }
      }
    }
  }
}
